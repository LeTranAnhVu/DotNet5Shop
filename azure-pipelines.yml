# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool: RaspberryPi

variables:
  mvcServer: 'MVCWebApp'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: "Build"
  jobs:
    - job: Buid
      displayName: "Build MVC server"
      steps:
        - task: DotNetCoreCLI@2
          displayName: "Restore project"
          inputs:
            command: 'restore'
            feedsToUse: 'select'
            projects: $(mvcServer)
        - task: DotNetCoreCLI@2
          displayName: "Build project"
          inputs:
            command: 'build'
            zipAfterPublish: true
            projects: $(mvcServer)
            # configuration: $(buildConfiguration)
            arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

            # arguments: '-o $(System.DefaultWorkingDirectory)/bin/$(mvcServer)'

        # - task: PublishPipelineArtifact@1
        #   displayName: "Publish and create artifact"
        #   inputs:
        #     targetPath: $(System.DefaultWorkingDirectory)/bin/$(mvcServer)
        #     artifactName: MVCServerArtifact
        - task: PublishBuildArtifacts@1
          displayName: "Publish and create artifact"
          inputs:
            PathtoPublish: $(Build.ArtifactStagingDirectory)
            # PathtoPublish: $(System.DefaultWorkingDirectory)/bin/$(mvcServer)
            ArtifactName: drop
            publishLocation: Container
- stage: Deploy
  displayName: "Deployment"
  jobs:
    - deployment: Deployment
      displayName: "deploy application job"
      environment: pi4-mvc-dev
      strategy:
        runOnce:
          preDeploy:
            steps:
              - download: current
                artifact: drop
          deploy:
            steps:
              - download: none
              - script: 'pwd'
              - script: 'ls $(Pipeline.Workspace)'
              # - script: |
              #     cd $(Pipeline.Workspace)
              #     dotnet ./$(mvcServer).dll --urls "http://0.0.0.0:5100;https://0.0.0.0:5101"
